[
  Result {
    fileName: 'test-computed.vue',
    topLevel: {
      topLevel: [
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'a', discriminator: 'name-identifier' }
          ],
          discriminator: 'property'
        },
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'b', discriminator: 'name-identifier' }
          ],
          discriminator: 'property'
        },
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'c', discriminator: 'name-identifier' }
          ],
          discriminator: 'property'
        },
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'answer', discriminator: 'name-identifier' }
          ],
          discriminator: 'property'
        },
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'right', discriminator: 'name-identifier' }
          ],
          discriminator: 'property'
        },
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'count_right', discriminator: 'name-identifier' }
          ],
          discriminator: 'property'
        },
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'count_wrong', discriminator: 'name-identifier' }
          ],
          discriminator: 'property'
        }
      ]
    },
    methods: {
      computed: [
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'accuracy', discriminator: 'name-identifier' }
          ],
          args: [],
          reads: [
            {
              id: [
                { name: 'this', discriminator: 'this' },
                {
                  name: 'count_wrong',
                  discriminator: 'name-identifier'
                }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                {
                  name: 'count_right',
                  discriminator: 'name-identifier'
                }
              ],
              discriminator: 'property'
            },
            {
              id: [ { name: 'n', discriminator: 'name-identifier' } ],
              discriminator: 'property'
            }
          ],
          writes: [],
          calls: []
        }
      ],
      methods: [
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'add_problem', discriminator: 'name-identifier' }
          ],
          args: [],
          reads: [
            {
              id: [ { name: 'max', discriminator: 'name-identifier' } ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'c', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'a', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'undefined', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            }
          ],
          writes: [
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'c', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'a', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'b', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'answer', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'right', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            }
          ],
          calls: [
            {
              id: [
                { name: 'Math', discriminator: 'name-identifier' },
                { name: 'floor', discriminator: 'name-identifier' }
              ],
              args: [
                {
                  id: [
                    {
                      name: 'BINARY',
                      discriminator: 'name-identifier'
                    }
                  ],
                  args: [
                    {
                      id: [
                        {
                          name: 'Math',
                          discriminator: 'name-identifier'
                        },
                        {
                          name: 'random',
                          discriminator: 'name-identifier'
                        }
                      ],
                      args: [],
                      discriminator: 'method'
                    },
                    {
                      id: [
                        {
                          name: 'BINARY',
                          discriminator: 'name-identifier'
                        }
                      ],
                      args: [
                        { id: [ [Object] ], discriminator: 'property' }
                      ],
                      discriminator: 'method'
                    }
                  ],
                  discriminator: 'method'
                }
              ],
              discriminator: 'method'
            },
            {
              id: [
                { name: 'Math', discriminator: 'name-identifier' },
                { name: 'random', discriminator: 'name-identifier' }
              ],
              args: [],
              discriminator: 'method'
            },
            {
              id: [
                { name: 'Math', discriminator: 'name-identifier' },
                { name: 'floor', discriminator: 'name-identifier' }
              ],
              args: [
                {
                  id: [
                    {
                      name: 'BINARY',
                      discriminator: 'name-identifier'
                    }
                  ],
                  args: [
                    {
                      id: [
                        {
                          name: 'Math',
                          discriminator: 'name-identifier'
                        },
                        {
                          name: 'random',
                          discriminator: 'name-identifier'
                        }
                      ],
                      args: [],
                      discriminator: 'method'
                    },
                    {
                      id: [
                        {
                          name: 'BINARY',
                          discriminator: 'name-identifier'
                        }
                      ],
                      args: [
                        {
                          id: [ [Object], [Object] ],
                          discriminator: 'property'
                        }
                      ],
                      discriminator: 'method'
                    }
                  ],
                  discriminator: 'method'
                }
              ],
              discriminator: 'method'
            }
          ]
        },
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'check_answer', discriminator: 'name-identifier' }
          ],
          args: [],
          reads: [
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'c', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'answer', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'right', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            }
          ],
          writes: [
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'right', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                {
                  name: 'count_right',
                  discriminator: 'name-identifier'
                }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                {
                  name: 'count_wrong',
                  discriminator: 'name-identifier'
                }
              ],
              discriminator: 'property'
            }
          ],
          calls: [
            {
              id: [
                { name: 'parseInt', discriminator: 'name-identifier' }
              ],
              args: [
                {
                  id: [
                    { name: 'this', discriminator: 'this' },
                    {
                      name: 'answer',
                      discriminator: 'name-identifier'
                    }
                  ],
                  discriminator: 'property'
                }
              ],
              discriminator: 'method'
            }
          ]
        },
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'may_check', discriminator: 'name-identifier' }
          ],
          args: [],
          reads: [
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'answer', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'undefined', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            },
            {
              id: [
                { name: 'this', discriminator: 'this' },
                { name: 'right', discriminator: 'name-identifier' }
              ],
              discriminator: 'property'
            }
          ],
          writes: [],
          calls: []
        },
        {
          id: [
            { name: 'this', discriminator: 'this' },
            { name: 'new_problem', discriminator: 'name-identifier' }
          ],
          args: [],
          reads: [],
          writes: [],
          calls: [
            {
              id: [
                { name: 'this', discriminator: 'this' },
                {
                  name: 'add_problem',
                  discriminator: 'name-identifier'
                }
              ],
              args: [],
              discriminator: 'method'
            }
          ]
        }
      ],
      init: {
        id: [
          { name: 'this', discriminator: 'this' },
          { name: 'created', discriminator: 'name-identifier' }
        ],
        args: [],
        reads: [],
        writes: [],
        calls: [
          {
            id: [
              { name: 'this', discriminator: 'this' },
              { name: 'add_problem', discriminator: 'name-identifier' }
            ],
            args: [],
            discriminator: 'method'
          }
        ]
      }
    },
    bindings: {
      bindings: [
        {
          tag: {
            id: 'span_5_8_5_28',
            loc: {
              start: { line: 5, column: 8 },
              end: { line: 5, column: 28 }
            },
            name: 'a'
          },
          values: [
            {
              item: {
                id: [ { name: 'a', discriminator: 'name-identifier' } ],
                discriminator: 'property'
              },
              bindingType: 'one-way'
            }
          ]
        },
        {
          tag: {
            id: 'span_5_31_5_52',
            loc: {
              start: { line: 5, column: 31 },
              end: { line: 5, column: 52 }
            },
            name: 'b'
          },
          values: [
            {
              item: {
                id: [ { name: 'b', discriminator: 'name-identifier' } ],
                discriminator: 'property'
              },
              bindingType: 'one-way'
            }
          ]
        },
        {
          tag: {
            id: 'input_6_14_6_57',
            loc: {
              start: { line: 6, column: 14 },
              end: { line: 6, column: 57 }
            },
            name: 'answer'
          },
          values: [
            {
              item: {
                id: [
                  { name: 'answer', discriminator: 'name-identifier' }
                ],
                discriminator: 'property'
              },
              bindingType: 'two-way'
            }
          ]
        },
        {
          tag: {
            id: 'button_7_8_15_17',
            loc: {
              start: { line: 7, column: 8 },
              end: { line: 15, column: 17 }
            },
            name: 'Check'
          },
          values: [
            {
              item: {
                id: [
                  {
                    name: 'may_check',
                    discriminator: 'name-identifier'
                  }
                ],
                args: [],
                discriminator: 'method'
              },
              bindingType: 'one-way'
            },
            {
              item: {
                id: [
                  {
                    name: 'check_answer',
                    discriminator: 'name-identifier'
                  }
                ],
                args: [],
                discriminator: 'method'
              },
              bindingType: 'event'
            }
          ]
        },
        {
          tag: {
            id: 'button_16_8_23_17',
            loc: {
              start: { line: 16, column: 8 },
              end: { line: 23, column: 17 }
            },
            name: 'Right'
          },
          values: [
            {
              item: {
                id: [ { name: 'right', discriminator: 'name-identifier' } ],
                discriminator: 'property'
              },
              bindingType: 'one-way'
            }
          ]
        },
        {
          tag: {
            id: 'button_24_8_31_17',
            loc: {
              start: { line: 24, column: 8 },
              end: { line: 31, column: 17 }
            },
            name: 'Wrong'
          },
          values: [
            {
              item: {
                id: [ { name: 'right', discriminator: 'name-identifier' } ],
                discriminator: 'property'
              },
              bindingType: 'one-way'
            }
          ]
        },
        {
          tag: {
            id: 'button_32_8_38_17',
            loc: {
              start: { line: 32, column: 8 },
              end: { line: 38, column: 17 }
            },
            name: 'New Problem'
          },
          values: [
            {
              item: {
                id: [
                  {
                    name: 'new_problem',
                    discriminator: 'name-identifier'
                  }
                ],
                args: [],
                discriminator: 'method'
              },
              bindingType: 'event'
            }
          ]
        },
        {
          tag: {
            id: 'span_53_12_53_43',
            loc: {
              start: { line: 53, column: 12 },
              end: { line: 53, column: 43 }
            },
            name: 'count_right'
          },
          values: [
            {
              item: {
                id: [
                  {
                    name: 'count_right',
                    discriminator: 'name-identifier'
                  }
                ],
                discriminator: 'property'
              },
              bindingType: 'one-way'
            }
          ]
        },
        {
          tag: {
            id: 'span_56_12_56_43',
            loc: {
              start: { line: 56, column: 12 },
              end: { line: 56, column: 43 }
            },
            name: 'count_wrong'
          },
          values: [
            {
              item: {
                id: [
                  {
                    name: 'count_wrong',
                    discriminator: 'name-identifier'
                  }
                ],
                discriminator: 'property'
              },
              bindingType: 'one-way'
            }
          ]
        },
        {
          tag: {
            id: 'span_59_12_59_40',
            loc: {
              start: { line: 59, column: 12 },
              end: { line: 59, column: 40 }
            },
            name: 'accuracy'
          },
          values: [
            {
              item: {
                id: [
                  {
                    name: 'accuracy',
                    discriminator: 'name-identifier'
                  }
                ],
                discriminator: 'property'
              },
              bindingType: 'one-way'
            }
          ]
        }
      ]
    }
  }
]
l(answer) -> answer, Check
l(Check) -> Right, Wrong, Check, count_right, accuracy, count_wrong
l(New Problem) -> a, b, answer, Check, Right, Wrong
l(created) -> a, b, answer, Check, Right, Wrong

Unique scenarios (A) of up to 3 elements:
[
  [ 'created' ],
  [ 'created', 'answer' ],
  [ 'created', 'Check' ],
  [ 'created', 'New Problem' ],
  [ 'created', 'answer', 'Check' ],
  [ 'created', 'New Problem', 'answer' ],
  [ 'created', 'New Problem', 'Check' ],
  [ 'created', 'New Problem', 'answer', 'Check' ]
]
Scenario: ['created']
	When 'created'
	Then 'a'
	And 'b'
	And 'answer'
	And 'Check'
	And 'Right'
	And 'Wrong'

Scenario: ['created', 'answer']
	Given 'created'
	When 'answer'
	Then 'answer'
	And 'Check'

Scenario: ['created', 'Check']
	Given 'created'
	When 'Check'
	Then 'Right'
	And 'Wrong'
	And 'Check'
	And 'count_right'
	And 'accuracy'
	And 'count_wrong'

Scenario: ['created', 'New Problem']
	Given 'created'
	When 'New Problem'
	Then 'a'
	And 'b'
	And 'answer'
	And 'Check'
	And 'Right'
	And 'Wrong'

Scenario: ['created', 'answer', 'Check']
	Given 'created'
	And 'answer'
	When 'Check'
	Then 'Right'
	And 'Wrong'
	And 'Check'
	And 'count_right'
	And 'accuracy'
	And 'count_wrong'

Scenario: ['created', 'New Problem', 'answer']
	Given 'created'
	And 'New Problem'
	When 'answer'
	Then 'answer'
	And 'Check'

Scenario: ['created', 'New Problem', 'Check']
	Given 'created'
	And 'New Problem'
	When 'Check'
	Then 'Right'
	And 'Wrong'
	And 'Check'
	And 'count_right'
	And 'accuracy'
	And 'count_wrong'

Scenario: ['created', 'New Problem', 'answer', 'Check']
	Given 'created'
	And 'New Problem'
	And 'answer'
	When 'Check'
	Then 'Right'
	And 'Wrong'
	And 'Check'
	And 'count_right'
	And 'accuracy'
	And 'count_wrong'

